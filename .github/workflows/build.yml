name: build
on: [push, pull_request]
jobs:

  prettier:
    name: Check code formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - run: npm ci

      - run: ./.github/scripts/prettier-check.sh

  # Build the site to be deployed to galasa.dev
  build-dotdev:
    name: Build the galasa.dev site
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      
      - uses: nelonoel/branch-name@v1.0.1
      
      - run: npm ci

      - run: npm run build
        env:
          BASE_REPO_SLUG: ${{ github.repository }}
          PR_REPO_SLUG: ${{ github.event.pull_request.head.repo.full_name }}
          PR_BRANCH_NAME: ${{ github.event.pull_request.head.ref }}

      - name: Serve the site
        run: npm run serve &

      - name: Check for broken links
        run: npx broken-link-checker -ro --exclude /docs/managers/ --filter-level 3 --host-requests 8 --user-agent Chrome/90 http://localhost:9000

      - name: Upload raw site
        uses: actions/upload-artifact@v2
        with:
          name: output-dotdev-raw-site
          path: public
  
  # Deploy the site to galasa.dev
  deploy-dotdev:
    name: Deploy to galasa.dev
    runs-on: ubuntu-latest
    needs: [ build-dotdev, prettier ]
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        region:
          - api: api.us-south.cf.cloud.ibm.com
            vars-file: vars.dallas.yml
          - api: api.eu-gb.cf.cloud.ibm.com
            vars-file: vars.london.yml
          - api: api.au-syd.cf.cloud.ibm.com
            vars-file: vars.sydney.yml


    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: repo

      - name: Download raw site
        uses: actions/download-artifact@v2
        with:
          name: output-dotdev-raw-site
          path: site

      - name: Merge Cloud Foundry metadata
        run: cp -av repo/cf/. site/

      - name: Deploy to IBM Cloud
        # uses: IBM/cloudfoundry-deploy@v2.0
        uses: ind1go/cloudfoundry-deploy@vars-file
        with:
          IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
          IBM_CLOUD_CF_API: ${{ matrix.region.api }}
          IBM_CLOUD_CF_ORG: ${{ secrets.IBM_CLOUD_CF_ORG }}
          IBM_CLOUD_CF_SPACE: ${{ secrets.IBM_CLOUD_CF_SPACE }}
          APP_MANIFEST_FILE: repo/manifest.yml
          APP_VARS_FILE: repo/${{ matrix.region.vars-file }}
          

          
  
  # Build the site for local deployment in closed networks
  build-local:
    name: Build the local site
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      
      - uses: nelonoel/branch-name@v1.0.1
      
      - run: npm ci

      - run: npm run build
        env:
          BASE_REPO_SLUG: ${{ github.repository }}
          PR_REPO_SLUG: ${{ github.event.pull_request.head.repo.full_name }}
          PR_BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
          GATSBY_GALASA_ENV: "LOCAL"

      - name: Serve the site
        run: npm run serve &

      - name: Check for broken links
        run: npx broken-link-checker -ro --exclude /docs/managers/ --filter-level 3 --host-requests 8 --user-agent Chrome/90 http://localhost:9000

      - name: Upload raw site
        uses: actions/upload-artifact@v2
        with:
          name: output-local-raw-site
          path: public

      - name: Create WAR
        run: ./.github/scripts/war.sh

      - name: Upload WAR
        uses: actions/upload-artifact@v2
        with:
          name: output-local-war
          path: galasa.dev-site.war

  build-local-runnable-jar:
    name: Build a runnable JAR of the local site
    runs-on: ubuntu-latest
    needs: [ build-local, prettier ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download raw site
        uses: actions/download-artifact@v2
        with:
          name: output-local-war
      
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Build with Gradle
        run: ./gradlew --info --stacktrace libertyPackage
        working-directory: gradle

      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: output-local-jar
          path: gradle/build/libs/galasa.dev-runnable.jar